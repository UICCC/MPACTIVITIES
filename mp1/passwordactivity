section .data
    message_prt db "Enter your password: ", 0
    weak_pass db "Weak password!", 0
    strong_pass db "Strong password!", 0
    buffer resb 30
section .bss
    input_buffer resb 10 
section .text
    global _start

_start:
   
    mov eax, 4 
    mov ebx, 1 
    mov ecx, message_prt 
    mov edx, 10 
    int 0x80 

    ; Read user input
    mov eax, 3 
    mov ebx, 0 
    mov ecx, input_buffer 
    mov edx, 10 
    int 0x80 

    mov ecx, input_buffer
    xor eax, eax ; Clear EAX
get_length:
    cmp byte [ecx], 0 
    je done_length
    inc ecx
    inc eax 
    jmp get_length
    
done_length:
   
    cmp eax, 8 ; Compare length with 8
    jl weak_password 
    jmp strong_password 

weak_password:
   
    mov eax, 4
    mov ebx, 1 
    mov ecx, weak_pass
    mov edx, 13 
    int 0x80 
    jmp exit_program

strong_password:
    
    mov eax, 4 
    mov ebx, 1 
    mov ecx, strong_pass 
    mov edx, 15 
    int 0x80 

exit_program:
   
    mov eax, 1 
    xor ebx, ebx 
    int 0x80 
