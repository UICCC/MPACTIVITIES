section .bss
    buffer resb 1
   
   section .data
    newline db 10

section .text
    global _start

_start:
    
    mov eax, 3           
    mov ebx, 0           
    mov ecx, buffer      
    mov edx, 1           
    int 0x80             

    
    cmp byte [buffer], 'a'
    jl if_notlower
    cmp byte [buffer], 'z'
    jg if_notlower

    sub byte [buffer], 32
    
    jmp print



if_notlower:
    cmp byte [buffer], 'A'
    jl print
    cmp byte [buffer], 'Z'
    jg print

    add byte [buffer], 32
    
    jmp print


print:
    
    mov eax, 4           
    mov ebx, 1          
    mov ecx, buffer      
    mov edx, 1  
    int 0x80    

      mov eax, 4           
    mov ebx, 1          
    mov ecx, newline     
    mov edx, 1  
    int 0x80    
    

    ; Exit the program
    mov eax, 1           
    xor ebx, ebx         
    int 0x80           





nasm -f elf mp5.asm
ld -m  elf_i386 mp5.o -o mp5
./mp5
